[tool.ruff]
line-length = 150
target-version = "py39"

# Src dizinleri
src = ["app"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "YTT", # flake8-2020
    "S",   # flake8-bandit
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "T20", # flake8-print
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate
    "PL",  # pylint
    "RUF", # ruff-specific rules
]

ignore = [
    "E501",  # line too long
    "B904",  # raise-without-from kuralını devre dışı bırakır
    "B008",  # Do not perform function call in argument defaults (FastAPI Depends için)
    "S101",  # Use of assert detected (pytest için gerekli)
    "A003",  # Class attribute shadowing built-in
    "PLR0913", # Too many arguments to function call
    "A002",  # Allow shadowing of built-in names in function arguments
]

# Ruff'ın düzeltme yapmasına izin verelim
fixable = ["ALL"]
unfixable = ["ERA001"] # Yorum satırlarını silmeyi engelle

# Dışarıda tutulacak dizinler
exclude = [
    ".git",
    ".ruff_cache",
    "__pycache__",
    ".env",
    "migrations/**/*",  # Migration dosyalarını ve alt dizinlerini kontrol etme
    "tests/fixtures/*",
    "tests/data/*",
]

# Per-file-ignores
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR2004"]  # Test dosyalarında bazı kuralları gevşet
"__init__.py" = ["F401"]  # __init__ dosyalarında kullanılmayan importlara izin ver

[tool.ruff.lint.isort]
known-first-party = ["app"]
combine-as-imports = true
force-single-line = false
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "google"  # Google stil docstring kullan

[tool.ruff.lint.pylint]
max-args = 8  # Fonksiyon parametre sayısı limiti
max-branches = 12  # Maksimum branch sayısı
max-returns = 6  # Maksimum return sayısı
max-statements = 50  # Fonksiyon başına maksimum statement

[tool.ruff.lint.mccabe]
max-complexity = 10  # Maksimum kod karmaşıklığı

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto" 